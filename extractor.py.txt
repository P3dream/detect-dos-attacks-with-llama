import subprocess
import json
import requests

def capture_packets(interface="enp0s3", packet_count=20):
    # Comando tshark para capturar um número fixo de pacotes
    tshark_command = [
        "tshark", "-i", interface, "-c", str(packet_count),
        "-T", "json", "-Y", "ip",  # Filtrando pacotes IP
        "-e", "frame.time",  # Capturando timestamp
        "-e", "ip.src",      # Capturando IP de origem
        "-e", "ip.proto",    # Capturando o protocolo
        "-e", "ip.len",      # Capturando o tamanho do pacote
        "-e", "frame.len",   # Capturando o tamanho total do pacote
        "-e", "tcp.srcport", # Capturando porta de origem TCP
        "-e", "tcp.flags",   # Capturando flags TCP
        "-e", "tcp.seq",     # Capturando número de sequência TCP
        "-e", "tcp.ack",     # Capturando número de ACK TCP
        "-e", "udp.srcport", # Capturando porta de origem UDP
        "-e", "udp.dstport", # Capturando porta de destino UDP
        "-e", "icmp.type",   # Capturando tipo de ICMP
        "-e", "icmp.code",   # Capturando código ICMP
    ]

    # Executa o comando tshark e captura a saída
    result = subprocess.run(tshark_command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    
    # Verifica se houve erro
    if result.returncode != 0:
        print("Erro na captura de pacotes:", result.stderr.decode())
        return []
    
    # Converte a saída para o formato JSON
    try:
        packets = json.loads(result.stdout.decode())
    except json.JSONDecodeError as e:
        print("Erro ao processar a saída JSON:", e)
        return []

    return packets

def send_data_to_url(data, url="http://192.168.56.1:3000/ia"):
    # Envia o JSON para a URL via POST
    try:
        response = requests.post(url, json=data)
        if response.status_code == 200:
            print("Dados enviados com sucesso!")
            # Tenta imprimir a resposta da API
            try:
                response_json = response.json()  # Tenta converter para JSON
                print("Resposta da API:", json.dumps(response_json, indent=4))
            except json.JSONDecodeError:
                print("Resposta da API não é um JSON válido. Conteúdo:", response.text)
        else:
            print(f"Falha ao enviar dados. Status code: {response.status_code}")
            print("Conteúdo da resposta:", response.text)
    except requests.exceptions.RequestException as e:
        print(f"Erro ao enviar dados: {e}")

# Exemplo de uso
packets = capture_packets(interface="enp0s3", packet_count=10)
if packets:
    # Exibe os pacotes capturados para debug
    # print(json.dumps(packets, indent=4))
    # Envia os pacotes capturados para a URL e aguarda a resposta
    send_data_to_url(packets)
